(load-file "common.edn")

(defchain upload
  ; Vec
  1 (Do make-test-asset) (Brotli.Compress) = .immutable

  ; Vec - 0 len
  [0] (Substrate.Encode ["c"]) = .no-refs
  .no-refs >= .payload

  "0x00" (HexToBytes)
  ; Option None - Linked asset
  (AppendTo .payload)
  ; Option None - Include cost
  (AppendTo .payload)

  .immutable (Hash.Blake2-256) >= .frag-cid >> .frag-hash-payload
  .no-refs >> .frag-hash-payload
  "0x00" (HexToBytes) >> .frag-hash-payload ; again no linked asset
  [0] (Substrate.Encode ["u64"]) >> .frag-hash-payload ; NONCE
  [0] (Substrate.Encode ["u32"]) >> .frag-hash-payload ; block
  .frag-hash-payload (Hash.Blake2-256) (ECDSA.Sign "//Charlie") (AppendTo .payload)

  ; block
  [0] (Substrate.Encode ["u32"]) (AppendTo .payload)

  [.immutable] (Substrate.Encode [nil]) (AppendTo .payload)

  "0x0155a0e40220" (HexToBytes) (PrependTo .frag-cid)
  .frag-cid (ToBase58) >= .frag-cid-str
  "z" (PrependTo .frag-cid-str)
  .frag-cid-str (Log "CID")

  .payload (Log)

  "//Charlie" (ECDSA.PublicKey true) >= .payload2
  (ToHex) (Log "charlie-key")

  [fragments-index add-upload-auth-index .payload2] (Do make-calldata) = .call1
  [sudo-index sudo-call .call1] (Do make-calldata) = .sudo-call1
  ["//Alice" .sudo-call1 0] (Do send-signed-extrinsic) (Log "result1")

  [fragments-index upload-index .payload] (Do make-calldata) = .call2 (| (ToHex) (Log "call2"))
  ["//Alice" .call2 1] (Do send-signed-extrinsic) (Log "result2")

  {"id" 1 "jsonrpc" "2.0" "method" "system_localListenAddresses" "params" []} (ToJson) (Http.Post rpc-server)
  (FromJson) (ExpectTable) (Take "result") (ExpectStringSeq) (Log)
  (ForEach
   (->
    (Log "connecting")
    = .p2p-address
    "swarm" >> .ipfs-args
    "connect" >> .ipfs-args
    .p2p-address >> .ipfs-args
    (Maybe (-> "" (Process.Run "ipfs" .ipfs-args)))))

  "repo" >> .ipfs-args-gc
  "gc" >> .ipfs-args-gc
  (Maybe (-> "" (Process.Run "ipfs" .ipfs-args-gc) nil))

  ; not ideal but we need to wait transaction is done and CI can be slow
  (Pause 5.0)

  "block" >> .ipfs-args-block
  "get" >> .ipfs-args-block
  .frag-cid-str >> .ipfs-args-block
  "" (Process.Run "ipfs" .ipfs-args-block) (StringToBytes)
  (Is .immutable) (Log) (Assert.Is true)
  ;
  )

(schedule root wait-port)
(if (run root 0.1) nil (throw "wait-port failed"))

(schedule root upload)
(if (run root 0.1) nil (throw "upload failed"))